GAMS Rev 227  x86_64/MS Windows                         11/06/14 12:52:00 Page 1
Demo2.gms
C o m p i l a t i o n


   2   
   3  * version: time-step by time-step
   4   
   5   option limrow=10000;
   6   option limcol=10000;
   7   
   8  ** ----------------------------------------------------------------------
   9  **  Loading Data: sets, parameters and tables
  10  ** ----------------------------------------------------------------------
  11   
INCLUDE    C:\My Manchester\Watersys\Demo2\dataset 1.txt
  13  * Network topology defenition
  14   
  15  SETS
  16  i vector of all nodes /
  17  J1
  18  Urb1
  19  Ag1
  20  EndPt
  21  SR1
  22  /
  23   
  24  Alias(i,j)
  25   
  26  * Node types
  27   
  28  SETS
  29   
  30  jn(i) /
  31  J1
  32  EndPt
  33  /
  34   
  35  sr(i) /
  36  SR1
  37  /
  38   
  39  ag(i) /
  40  Ag1
  41  /
  42   
  43  ur(i) /
  44  Urb1
  45  /
  46   
  47  * Node groups
  48   
  49  SETS
  50  ns_nodes(i) non-storage nodes where mass balance constraint should be sati
      sfied /
  51  J1
  52  Urb1
  53  Ag1
  54  /
  55   
  56  SETS
  57  s_nodes(i) storage nodes where storage mass balance constraint should be s
      atisfied /
  58  SR1
  59  /
  60   
  61  SETS
  62  dem_nodes(i) demand nodes /
  63  Ag1
  64  Urb1
  65  /
  66   
  67  SETS
  68  links(i,j) vector of all links /
  69  SR1.J1
  70  SR1.Ag1
  71  J1.Urb1
  72  J1.EndPt
  73  /
  74   
  75  * Connectivity matrix
  76   
  77  Table Connect(i,j)
  78          J1        Urb1        Ag1            EndPt      SR1
  79  J1      0         1           0              1          0
  80  Urb1    0         0           0              0          0
  81  Ag1     0         0           0              0          0
  82  EndPt   0         0           0              0          0
  83  SR1     1         0           1              0          0
  84   
  85  * Time index
  86   
  87  SETS
  88   
  89  t time index /1*6/
  90   
  91  alias (t,tsteps);
  92   
  93  * define time steps dependent on time index (t)
  94   
  95  Parameter timestamp(t) ;
  96   
  97  *    timestamp("0") = 730120.0 ;
  98      timestamp("1") = 730151.0 ;
  99      timestamp("2") = 730180.0 ;
 100      timestamp("3") = 730211.0 ;
 101      timestamp("4") = 730241.0 ;
 102      timestamp("5") = 730272.0 ;
 103      timestamp("6") = 730302.0 ;
 104   
 105   
 106  * Nodes data
 107   
 108   
 109  Table initStor (s_nodes,t)
 110                 1
 111  SR1            450
 112   
 113   
 114  Table inflow (i,t)
 115                   1       2      3      4      5      6
 116  SR1              300     320    320    330    310    310
 117   
 118   
 119   
 120  * Consumption coefficient
 121   
 122  Parameter cc(i);
 123     cc("Ag1")=1;
 124     cc("Urb1")=1;
 125   
 126   
 127  Table cost(i,j,t)
 128   
 129                  1    2    3     4      5      6
 130  SR1.J1          15   15   15    15     15     15
 131  SR1.Ag1         20   8    20    15     19     10
 132  J1.Urb1         1    10   7     2      3      5
 133  J1.EndPt        10   10   10    10     10     10
 134   
 135   
 136  Table flowmultiplier(i,j,t)
 137   
 138                               1     2     3    4    5    6
 139  SR1.J1                       1     0.9   1    0.95 1    1
 140  SR1.Ag1                      1     1     1    1    1    1
 141  J1.Urb1                      0.95  0.85  0.9  0.85 0.9  1
 142  J1.EndPt                     1     1     1    1    1    1
 143   
 144   
 145  Table lower(i,j,t)
 146   
 147                                1     2     3    4     5    6
 148  SR1.J1                        10    10    10   10    10   10
 149  SR1.Ag1                       25    15    10   10    15   15
 150  J1.Urb1                       20    10    25   20    20   20
 151  J1.EndPt                      10    30    30   30    30   30
 152   
 153   
 154  Table upper(i,j,t)
 155   
 156                                1     2     3     4     5     6
 157  SR1.J1                        310   300   300   300   310   300
 158  SR1.Ag1                       200   210   210   200   200   200
 159  J1.Urb1                       220   250   240   230   240   250
 160  J1.EndPt                      200   200   200   200   200   200
 161   
 162   
 163  Table storagelower(s_nodes,t)
 164   
 165                                1      2      3      4      5      6
 166  SR1                           10     10     10     10     10     10
 167   
 168  Table storageupper(s_nodes,t)
 169   
 170                                1      2      3      4      5      6
 171  SR1                           500    500    500    500    500    500
 172   
 173  ** ----------------------------------------------------------------------
 174  **  Model variables and equations
 175  ** ----------------------------------------------------------------------
 176   
 177  VARIABLES
 178  Q(i,j,t) flow in each link in each period
 179  S(i,t) storage volume in storage nodes
 180  delivery (i) water delivered to demand node i in each period
 181  Z objective function
 182  Obj (t);
 183  ;
 184   
 185  POSITIVE VARIABLES
 186  Q
 187  S
 188  ;
 189   
 190  positive variable  storage(i,t) an interim variable for saving the value o
      f the storage at the end of each time-step;
 191   
 192  EQUATIONS
 193  MassBalance_nonstorage(ns_nodes)
 194  MassBalance_storage(s_nodes)
 195  MinFlow(i,j,t)
 196  MaxFlow(i,j,t)
 197  MaxStor(s_nodes,t)
 198  MinStor(s_nodes,t)
 199  Demand(dem_nodes)
 200  Objective
 201  ;
 202   
 203  * introducing a dummy variable to empty (reset) the time-step in each loop
 204   
 206  set dv(t) / /;
 207   
 208  * Objective function for time step by time step formulation
 209   
 210  Objective ..
 211      Z =E=sum(t$dv(t),SUM((i,j)$links(i,j), Q(i,j,t) * cost(i,j,t)));
 212   
 213  *Calculating water delivery for each demand node at each time step
 214   
 215  Demand(dem_nodes)..
 216           delivery(dem_nodes) =E= sum(t$dv(t),SUM(j$links(j,dem_nodes), Q(j
      ,dem_nodes,t)
 217           * flowmultiplier(j,dem_nodes,t)));
 218   
 219  * Mass balance constrait for non-storage nodes:
 220   
 221  MassBalance_nonstorage(ns_nodes) ..
 222      sum(t$dv(t),inflow(ns_nodes,t)+SUM(j$links(j,ns_nodes), Q(j,ns_nodes,t
      )* flowmultiplier(j,ns_nodes,t))
 223      - SUM(j$links(ns_nodes,j), Q(ns_nodes,j,t))
 224      - cc(ns_nodes)$dem_nodes(ns_nodes) * delivery(ns_nodes))
 225      =E= 0;
 226   
 227  * Mass balance constraint for storage nodes:
 228   
 229  MassBalance_storage(s_nodes)..
 230           sum(t$dv(t),inflow(s_nodes,t)+SUM(j$links(j,s_nodes), Q(j,s_nodes
      ,t)* flowmultiplier(j,s_nodes,t))
 231           - SUM(j$links(s_nodes,j), Q(s_nodes,j,t))
 232           -S(s_nodes,t)
 233           +storage(s_nodes,t-1)$(ord(t) GT 1)
 234           + initStor(s_nodes,t)$(ord(t) EQ 1))
 235           =E= 0;
 236   
 237  * Lower and upper bound of possible flow in links
 238   
 239  MinFlow(i,j,t)$(links(i,j) and dv(t))..
 240      Q(i,j,t) =G= lower(i,j,t);
 241   
 242  MaxFlow(i,j,t)$(links(i,j) and dv(t))..
 243      Q(i,j,t) =L= upper(i,j,t);
 244   
 245  * Lower and upper bound of Storage volume at storage nodes
 246   
 247  MaxStor(s_nodes,t)$dv(t)..
 248      S(s_nodes,t) =L= storageupper(s_nodes,t);
 249   
 250  MinStor(s_nodes,t)$dv(t)..
 251      S(s_nodes,t) =G= storagelower(s_nodes,t);
 252   
 253  ** ----------------------------------------------------------------------
 254  **  Model declaration and solve statements
 255  ** ----------------------------------------------------------------------
 256   
 257  MODEL Demo2 /ALL/;
 258   
 259  loop (tsteps,
 260              dv(tsteps)=t(tsteps);
 261              display dv;
 262              SOLVE Demo2 USING LP MINIMIZING Z;
 263              storage.fx(i,tsteps)=S.l(i,tsteps) ;
 264              Obj.l(tsteps)=Z.l;
 265              DISPLAY  Z.l, Obj.l,storage.l,S.l, Q.l,delivery.l;
 266              dv(tsteps)=no;
 267        );
 268   
 269  *Generating results output
 270   
 271  execute_unload "Results.gdx" ,
 272      Q,
 273      S,
 274      MassBalance_storage,
 275      MassBalance_nonstorage,
 276      MinFlow,
 277      MaxFlow,
 278      MinStor,
 279      MaxStor,
 280      Z,
 281      Obj,
 282      cost,
 283      storage,
 284      delivery,
 285      inflow;
GAMS Rev 227  x86_64/MS Windows                         11/06/14 12:52:00 Page 2
Demo2.gms
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\My Manchester\Watersys\Demo2\Demo2.
                                          gms
     2       12 INCLUDE        1      12  .C:\My Manchester\Watersys\Demo2\datas
                                           et 1.txt


COMPILATION TIME     =        0.000 SECONDS      3 Mb  WEX227-227 May  8, 2008
GAMS Rev 227  x86_64/MS Windows                         11/06/14 12:52:00 Page 3
Demo2.gms
E x e c u t i o n


----    261 SET dv  

1

GAMS Rev 227  x86_64/MS Windows                         11/06/14 12:52:00 Page 4
Demo2.gms
Equation Listing    SOLVE Demo2 Using LP From line 262


---- MassBalance_nonstorage  =E=  

MassBalance_nonstorage(J1)..  - Q(J1,Urb1,1) - Q(J1,EndPt,1) + Q(SR1,J1,1) =E= 0
      ; (LHS = 0)
     
MassBalance_nonstorage(Urb1)..  0.95*Q(J1,Urb1,1) - delivery(Urb1) =E= 0 ;
     
      (LHS = 0)
     
MassBalance_nonstorage(Ag1)..  Q(SR1,Ag1,1) - delivery(Ag1) =E= 0 ; (LHS = 0)
     

---- MassBalance_storage  =E=  

MassBalance_storage(SR1)..  - Q(SR1,J1,1) - Q(SR1,Ag1,1) - S(SR1,1) =E= -750 ;
     
      (LHS = 0, INFES = 750 ****)
     

---- MinFlow  =G=  

MinFlow(J1,Urb1,1)..  Q(J1,Urb1,1) =G= 20 ; (LHS = 0, INFES = 20 ****)
     
MinFlow(J1,EndPt,1)..  Q(J1,EndPt,1) =G= 10 ; (LHS = 0, INFES = 10 ****)
     
MinFlow(SR1,J1,1)..  Q(SR1,J1,1) =G= 10 ; (LHS = 0, INFES = 10 ****)
     
MinFlow(SR1,Ag1,1)..  Q(SR1,Ag1,1) =G= 25 ; (LHS = 0, INFES = 25 ****)
     

---- MaxFlow  =L=  

MaxFlow(J1,Urb1,1)..  Q(J1,Urb1,1) =L= 220 ; (LHS = 0)
     
MaxFlow(J1,EndPt,1)..  Q(J1,EndPt,1) =L= 200 ; (LHS = 0)
     
MaxFlow(SR1,J1,1)..  Q(SR1,J1,1) =L= 310 ; (LHS = 0)
     
MaxFlow(SR1,Ag1,1)..  Q(SR1,Ag1,1) =L= 200 ; (LHS = 0)
     

---- MaxStor  =L=  

MaxStor(SR1,1)..  S(SR1,1) =L= 500 ; (LHS = 0)
     

---- MinStor  =G=  

MinStor(SR1,1)..  S(SR1,1) =G= 10 ; (LHS = 0, INFES = 10 ****)
     

---- Demand  =E=  

Demand(Urb1)..  - 0.95*Q(J1,Urb1,1) + delivery(Urb1) =E= 0 ; (LHS = 0)
     
Demand(Ag1)..  - Q(SR1,Ag1,1) + delivery(Ag1) =E= 0 ; (LHS = 0)
     

---- Objective  =E=  

Objective..  - Q(J1,Urb1,1) - 10*Q(J1,EndPt,1) - 15*Q(SR1,J1,1)
     
      - 20*Q(SR1,Ag1,1) + Z =E= 0 ; (LHS = 0)
     
GAMS Rev 227  x86_64/MS Windows                         11/06/14 12:52:00 Page 5
Demo2.gms
Column Listing      SOLVE Demo2 Using LP From line 262


---- Q  flow in each link in each period

Q(J1,Urb1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        0.95    MassBalance_nonstorage(Urb1)
        1       MinFlow(J1,Urb1,1)
        1       MaxFlow(J1,Urb1,1)
       -0.95    Demand(Urb1)
       -1       Objective

Q(J1,EndPt,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        1       MinFlow(J1,EndPt,1)
        1       MaxFlow(J1,EndPt,1)
      -10       Objective

Q(SR1,J1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(J1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,J1,1)
        1       MaxFlow(SR1,J1,1)
      -15       Objective

Q(SR1,Ag1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(Ag1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,Ag1,1)
        1       MaxFlow(SR1,Ag1,1)
       -1       Demand(Ag1)
      -20       Objective


---- S  storage volume in storage nodes

S(SR1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_storage(SR1)
        1       MaxStor(SR1,1)
        1       MinStor(SR1,1)


---- delivery  water delivered to demand node i in each period

delivery(Urb1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       MassBalance_nonstorage(Urb1)
        1       Demand(Urb1)

delivery(Ag1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       MassBalance_nonstorage(Ag1)
        1       Demand(Ag1)


---- Z  objective function

Z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Objective

GAMS Rev 227  x86_64/MS Windows                         11/06/14 12:52:00 Page 6
Demo2.gms
Model Statistics    SOLVE Demo2 Using LP From line 262


LOOPS                               tsteps   1


MODEL STATISTICS

BLOCKS OF EQUATIONS           8     SINGLE EQUATIONS           17
BLOCKS OF VARIABLES           4     SINGLE VARIABLES            8
NON ZERO ELEMENTS            29


GENERATION TIME      =        0.047 SECONDS      4 Mb  WEX227-227 May  8, 2008


EXECUTION TIME       =        0.109 SECONDS      4 Mb  WEX227-227 May  8, 2008
GAMS Rev 227  x86_64/MS Windows                         11/06/14 12:52:00 Page 7
Demo2.gms
Solution Report     SOLVE Demo2 Using LP From line 262


               L O O P S             tsteps 1

               S O L V E      S U M M A R Y

     MODEL   Demo2               OBJECTIVE  Z
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  COINIPOPT           FROM LINE  262

**** SOLVER STATUS     1 NORMAL COMPLETION         
**** MODEL STATUS      1 OPTIMAL                   
**** OBJECTIVE VALUE             4190.0000

 RESOURCE USAGE, LIMIT          0.044      1000.000
 ITERATION COUNT, LIMIT        16         10000

GAMS/CoinIpopt NLP Solver (IPOPT Library 3.4dev, using MUMPS Library 4.7.3)
written by A. Waechter

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Common Public License (CPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

NOTE: You are using Ipopt by default with the MUMPS linear solver.
      Other linear solvers might be more efficient (see Ipopt documentation).


Total number of variables............................:        7
                     variables with only lower bounds:        5
                variables with lower and upper bounds:        0
                     variables with only upper bounds:        0
Total number of equality constraints.................:        6
Total number of inequality constraints...............:       10
        inequality constraints with only lower bounds:        5
   inequality constraints with lower and upper bounds:        0
        inequality constraints with only upper bounds:        5


Number of Iterations....: 16

                                   (scaled)                 (unscaled)
Objective...............:  4.1900000000000309e+003   4.1900000000000309e+003
Dual infeasibility......:  2.1442178485577544e-015   2.1442178485577544e-015
Constraint violation....:  2.8421709430404007e-014   2.8421709430404007e-014
Complementarity.........:  1.0004441719503443e-011   1.0004441719503443e-011
Overall NLP error.......:  1.0004441719503443e-011   1.0004441719503443e-011


Number of objective function evaluations             = 17
Number of objective gradient evaluations             = 17
Number of equality constraint evaluations            = 17
Number of inequality constraint evaluations          = 17
Number of equality constraint Jacobian evaluations   = 17
Number of inequality constraint Jacobian evaluations = 17
Number of Lagrangian Hessian evaluations             = 16
Total CPU secs in IPOPT (w/o function evaluations)   =      0.039
Total CPU secs in NLP function evaluations           =      0.000

EXIT: Optimal Solution Found.

---- EQU MassBalance_nonstorage  

        LOWER     LEVEL     UPPER    MARGINAL

J1        .         .         .       -1.000      
Urb1      .         .         .         EPS       
Ag1       .         .         .    3.150E-12      

---- EQU MassBalance_storage  

       LOWER     LEVEL     UPPER    MARGINAL

SR1  -750.000  -750.000  -750.000   -16.000      

---- EQU MinFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .1    20.000   215.000     +INF  5.118E-14      
J1 .EndPt.1    10.000    10.000     +INF      9.000      
SR1.J1   .1    10.000   225.000     +INF  4.641E-14      
SR1.Ag1  .1    25.000    25.000     +INF      4.000      

---- EQU MaxFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .1     -INF    215.000   220.000 -2.00E-12      
J1 .EndPt.1     -INF     10.000   200.000 -5.25E-14      
SR1.J1   .1     -INF    225.000   310.000 -1.18E-13      
SR1.Ag1  .1     -INF     25.000   200.000 -5.70E-14      

---- EQU MaxStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.1     -INF    500.000   500.000   -16.000      

---- EQU MinStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.1    10.000   500.000     +INF  2.031E-14      

---- EQU Demand  

        LOWER     LEVEL     UPPER    MARGINAL

Urb1      .         .         .         EPS       
Ag1       .         .         .    3.150E-12      

                       LOWER     LEVEL     UPPER    MARGINAL

---- EQU Objective       .         .         .        1.000      

---- VAR Q  flow in each link in each period

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .1      .      215.000     +INF  4.651E-14      
J1 .EndPt.1      .       10.000     +INF  1.000E-12      
SR1.J1   .1      .      225.000     +INF  4.444E-14      
SR1.Ag1  .1      .       25.000     +INF  4.000E-13      

---- VAR S  storage volume in storage nodes

         LOWER     LEVEL     UPPER    MARGINAL

SR1.1      .      500.000     +INF  2.000E-14      

---- VAR delivery  water delivered to demand node i in each period

        LOWER     LEVEL     UPPER    MARGINAL

Urb1     -INF    204.250     +INF       EPS       
Ag1      -INF     25.000     +INF       EPS       

                       LOWER     LEVEL     UPPER    MARGINAL

---- VAR Z              -INF   4190.000     +INF       .         

  Z  objective function


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS Rev 227  x86_64/MS Windows                         11/06/14 12:52:00 Page 8
Demo2.gms
E x e c u t i o n


----    265 VARIABLE Z.L                   =     4190.000  objective function

----    265 VARIABLE Obj.L  

1 4190.000


----    265 VARIABLE storage.L  an interim variable for saving the value of the 
                                storage at the end of each time-step

                1

SR1       500.000


----    265 VARIABLE S.L  storage volume in storage nodes

              1

SR1     500.000


----    265 VARIABLE Q.L  flow in each link in each period

                    1

J1 .Urb1      215.000
J1 .EndPt      10.000
SR1.J1        225.000
SR1.Ag1        25.000


----    265 VARIABLE delivery.L  water delivered to demand node i in each period

Urb1 204.250,    Ag1   25.000


----    261 SET dv  

2

GAMS Rev 227  x86_64/MS Windows                         11/06/14 12:52:00 Page 9
Demo2.gms
Equation Listing    SOLVE Demo2 Using LP From line 262


---- MassBalance_nonstorage  =E=  

MassBalance_nonstorage(J1)..  - Q(J1,Urb1,2) - Q(J1,EndPt,2) + 0.9*Q(SR1,J1,2)
      =E= 0 ; (LHS = 0)
     
MassBalance_nonstorage(Urb1)..  0.85*Q(J1,Urb1,2) - delivery(Urb1) =E= 0 ;
     
      (LHS = -204.249999999997, INFES = 204.249999999997 ****)
     
MassBalance_nonstorage(Ag1)..  Q(SR1,Ag1,2) - delivery(Ag1) =E= 0 ;
     
      (LHS = -25.0000000000025, INFES = 25.0000000000025 ****)
     

---- MassBalance_storage  =E=  

MassBalance_storage(SR1)..  - Q(SR1,J1,2) - Q(SR1,Ag1,2) - S(SR1,2)
     
      + storage(SR1,1) =E= -320 ;
     
      (LHS = 499.999999999999, INFES = 819.999999999999 ****)
     

---- MinFlow  =G=  

MinFlow(J1,Urb1,2)..  Q(J1,Urb1,2) =G= 10 ; (LHS = 0, INFES = 10 ****)
     
MinFlow(J1,EndPt,2)..  Q(J1,EndPt,2) =G= 30 ; (LHS = 0, INFES = 30 ****)
     
MinFlow(SR1,J1,2)..  Q(SR1,J1,2) =G= 10 ; (LHS = 0, INFES = 10 ****)
     
MinFlow(SR1,Ag1,2)..  Q(SR1,Ag1,2) =G= 15 ; (LHS = 0, INFES = 15 ****)
     

---- MaxFlow  =L=  

MaxFlow(J1,Urb1,2)..  Q(J1,Urb1,2) =L= 250 ; (LHS = 0)
     
MaxFlow(J1,EndPt,2)..  Q(J1,EndPt,2) =L= 200 ; (LHS = 0)
     
MaxFlow(SR1,J1,2)..  Q(SR1,J1,2) =L= 300 ; (LHS = 0)
     
MaxFlow(SR1,Ag1,2)..  Q(SR1,Ag1,2) =L= 210 ; (LHS = 0)
     

---- MaxStor  =L=  

MaxStor(SR1,2)..  S(SR1,2) =L= 500 ; (LHS = 0)
     

---- MinStor  =G=  

MinStor(SR1,2)..  S(SR1,2) =G= 10 ; (LHS = 0, INFES = 10 ****)
     

---- Demand  =E=  

Demand(Urb1)..  - 0.85*Q(J1,Urb1,2) + delivery(Urb1) =E= 0 ;
     
      (LHS = 204.249999999997, INFES = 204.249999999997 ****)
     
Demand(Ag1)..  - Q(SR1,Ag1,2) + delivery(Ag1) =E= 0 ;
     
      (LHS = 25.0000000000025, INFES = 25.0000000000025 ****)
     

---- Objective  =E=  

Objective..  - 10*Q(J1,Urb1,2) - 10*Q(J1,EndPt,2) - 15*Q(SR1,J1,2)
     
      - 8*Q(SR1,Ag1,2) + Z =E= 0 ;
     
      (LHS = 4190.00000000003, INFES = 4190.00000000003 ****)
     
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 10
Demo2.gms
Column Listing      SOLVE Demo2 Using LP From line 262


---- Q  flow in each link in each period

Q(J1,Urb1,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        0.85    MassBalance_nonstorage(Urb1)
        1       MinFlow(J1,Urb1,2)
        1       MaxFlow(J1,Urb1,2)
       -0.85    Demand(Urb1)
      -10       Objective

Q(J1,EndPt,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        1       MinFlow(J1,EndPt,2)
        1       MaxFlow(J1,EndPt,2)
      -10       Objective

Q(SR1,J1,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        0.9     MassBalance_nonstorage(J1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,J1,2)
        1       MaxFlow(SR1,J1,2)
      -15       Objective
       -0.1     (DJ ****)

Q(SR1,Ag1,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(Ag1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,Ag1,2)
        1       MaxFlow(SR1,Ag1,2)
       -1       Demand(Ag1)
       -8       Objective
       -8       (DJ ****)


---- S  storage volume in storage nodes

S(SR1,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_storage(SR1)
        1       MaxStor(SR1,2)
        1       MinStor(SR1,2)
      -16       (DJ ****)


---- delivery  water delivered to demand node i in each period

delivery(Urb1)
                (.LO, .L, .UP, .M = -INF, 204.249999999997, +INF, EPS)
       -1       MassBalance_nonstorage(Urb1)
        1       Demand(Urb1)

delivery(Ag1)
                (.LO, .L, .UP, .M = -INF, 25.0000000000025, +INF, EPS)
       -1       MassBalance_nonstorage(Ag1)
        1       Demand(Ag1)


---- Z  objective function

Z
                (.LO, .L, .UP, .M = -INF, 4190.00000000003, +INF, 0)
        1       Objective


---- storage  an interim variable for saving the value of the storage at the end
              of each time-step

storage(SR1,1)
                (.LO, .L, .UP, .M = 499.999999999999, 499.999999999999, 
499.999999999999, 0)
        1       MassBalance_storage(SR1)

GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 11
Demo2.gms
Model Statistics    SOLVE Demo2 Using LP From line 262


LOOPS                               tsteps   2


MODEL STATISTICS

BLOCKS OF EQUATIONS           8     SINGLE EQUATIONS           17
BLOCKS OF VARIABLES           5     SINGLE VARIABLES            9
NON ZERO ELEMENTS            30


GENERATION TIME      =        0.016 SECONDS      3 Mb  WEX227-227 May  8, 2008


EXECUTION TIME       =        0.016 SECONDS      3 Mb  WEX227-227 May  8, 2008
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 12
Demo2.gms
Solution Report     SOLVE Demo2 Using LP From line 262


               L O O P S             tsteps 2

               S O L V E      S U M M A R Y

     MODEL   Demo2               OBJECTIVE  Z
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  COINIPOPT           FROM LINE  262

**** SOLVER STATUS     1 NORMAL COMPLETION         
**** MODEL STATUS      1 OPTIMAL                   
**** OBJECTIVE VALUE             4320.0000

 RESOURCE USAGE, LIMIT          0.023      1000.000
 ITERATION COUNT, LIMIT        16         10000

GAMS/CoinIpopt NLP Solver (IPOPT Library 3.4dev, using MUMPS Library 4.7.3)
written by A. Waechter

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Common Public License (CPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

NOTE: You are using Ipopt by default with the MUMPS linear solver.
      Other linear solvers might be more efficient (see Ipopt documentation).


Total number of variables............................:        7
                     variables with only lower bounds:        5
                variables with lower and upper bounds:        0
                     variables with only upper bounds:        0
Total number of equality constraints.................:        6
Total number of inequality constraints...............:       10
        inequality constraints with only lower bounds:        5
   inequality constraints with lower and upper bounds:        0
        inequality constraints with only upper bounds:        5


Number of Iterations....: 16

                                   (scaled)                 (unscaled)
Objective...............:  4.3200000000000036e+003   4.3200000000000036e+003
Dual infeasibility......:  2.1194219839036637e-015   2.1194219839036637e-015
Constraint violation....:  5.6843418860808015e-014   5.6843418860808015e-014
Complementarity.........:  1.0389984452160122e-011   1.0389984452160122e-011
Overall NLP error.......:  1.0389984452160122e-011   1.0389984452160122e-011


Number of objective function evaluations             = 17
Number of objective gradient evaluations             = 17
Number of equality constraint evaluations            = 17
Number of inequality constraint evaluations          = 17
Number of equality constraint Jacobian evaluations   = 17
Number of inequality constraint Jacobian evaluations = 17
Number of Lagrangian Hessian evaluations             = 16
Total CPU secs in IPOPT (w/o function evaluations)   =      0.046
Total CPU secs in NLP function evaluations           =      0.000

EXIT: Optimal Solution Found.

---- EQU MassBalance_nonstorage  

        LOWER     LEVEL     UPPER    MARGINAL

J1        .         .         .      -10.000      
Urb1      .         .         .         EPS       
Ag1       .         .         .    -2.990E-8      

---- EQU MassBalance_storage  

       LOWER     LEVEL     UPPER    MARGINAL

SR1  -320.000  -320.000  -320.000   -24.000      

---- EQU MinFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .2    10.000    44.056     +INF  3.050E-13      
J1 .EndPt.2    30.000    54.944     +INF  3.801E-13      
SR1.J1   .2    10.000   110.000     +INF  0.999E-13      
SR1.Ag1  .2    15.000   210.000     +INF  5.118E-14      

---- EQU MaxFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .2     -INF     44.056   250.000 -4.83E-14      
J1 .EndPt.2     -INF     54.944   200.000 -6.91E-14      
SR1.J1   .2     -INF    110.000   300.000 -5.25E-14      
SR1.Ag1  .2     -INF    210.000   210.000   -16.000      

---- EQU MaxStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.2     -INF    500.000   500.000   -24.000      

---- EQU MinStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.2    10.000   500.000     +INF  2.031E-14      

---- EQU Demand  

        LOWER     LEVEL     UPPER    MARGINAL

Urb1      .         .         .         EPS       
Ag1       .         .         .    -2.990E-8      

                       LOWER     LEVEL     UPPER    MARGINAL

---- EQU Objective       .         .         .        1.000      

---- VAR Q  flow in each link in each period

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .2      .       44.056     +INF  2.330E-13      
J1 .EndPt.2      .       54.944     +INF  1.794E-13      
SR1.J1   .2      .      110.000     +INF  9.092E-14      
SR1.Ag1  .2      .      210.000     +INF  4.762E-14      

---- VAR S  storage volume in storage nodes

         LOWER     LEVEL     UPPER    MARGINAL

SR1.2      .      500.000     +INF  2.000E-14      

---- VAR delivery  water delivered to demand node i in each period

        LOWER     LEVEL     UPPER    MARGINAL

Urb1     -INF     37.448     +INF       EPS       
Ag1      -INF    210.000     +INF       EPS       

                       LOWER     LEVEL     UPPER    MARGINAL

---- VAR Z              -INF   4320.000     +INF       .         

  Z  objective function

---- VAR storage  an interim variable for saving the value of the storage at the
                  end of each time-step

         LOWER     LEVEL     UPPER    MARGINAL

SR1.1   500.000   500.000   500.000      EPS       


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 13
Demo2.gms
E x e c u t i o n


----    265 VARIABLE Z.L                   =     4320.000  objective function

----    265 VARIABLE Obj.L  

1 4190.000,    2 4320.000


----    265 VARIABLE storage.L  an interim variable for saving the value of the 
                                storage at the end of each time-step

                1           2

SR1       500.000     500.000


----    265 VARIABLE S.L  storage volume in storage nodes

              1           2

SR1     500.000     500.000


----    265 VARIABLE Q.L  flow in each link in each period

                    1           2

J1 .Urb1      215.000      44.056
J1 .EndPt      10.000      54.944
SR1.J1        225.000     110.000
SR1.Ag1        25.000     210.000


----    265 VARIABLE delivery.L  water delivered to demand node i in each period

Urb1  37.448,    Ag1  210.000


----    261 SET dv  

3

GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 14
Demo2.gms
Equation Listing    SOLVE Demo2 Using LP From line 262


---- MassBalance_nonstorage  =E=  

MassBalance_nonstorage(J1)..  - Q(J1,Urb1,3) - Q(J1,EndPt,3) + Q(SR1,J1,3) =E= 0
      ; (LHS = 0)
     
MassBalance_nonstorage(Urb1)..  0.9*Q(J1,Urb1,3) - delivery(Urb1) =E= 0 ;
     
      (LHS = -37.4475046031438, INFES = 37.4475046031438 ****)
     
MassBalance_nonstorage(Ag1)..  Q(SR1,Ag1,3) - delivery(Ag1) =E= 0 ;
     
      (LHS = -209.999999999999, INFES = 209.999999999999 ****)
     

---- MassBalance_storage  =E=  

MassBalance_storage(SR1)..  - Q(SR1,J1,3) - Q(SR1,Ag1,3) - S(SR1,3)
     
      + storage(SR1,2) =E= -320 ; (LHS = 500, INFES = 820 ****)
     

---- MinFlow  =G=  

MinFlow(J1,Urb1,3)..  Q(J1,Urb1,3) =G= 25 ; (LHS = 0, INFES = 25 ****)
     
MinFlow(J1,EndPt,3)..  Q(J1,EndPt,3) =G= 30 ; (LHS = 0, INFES = 30 ****)
     
MinFlow(SR1,J1,3)..  Q(SR1,J1,3) =G= 10 ; (LHS = 0, INFES = 10 ****)
     
MinFlow(SR1,Ag1,3)..  Q(SR1,Ag1,3) =G= 10 ; (LHS = 0, INFES = 10 ****)
     

---- MaxFlow  =L=  

MaxFlow(J1,Urb1,3)..  Q(J1,Urb1,3) =L= 240 ; (LHS = 0)
     
MaxFlow(J1,EndPt,3)..  Q(J1,EndPt,3) =L= 200 ; (LHS = 0)
     
MaxFlow(SR1,J1,3)..  Q(SR1,J1,3) =L= 300 ; (LHS = 0)
     
MaxFlow(SR1,Ag1,3)..  Q(SR1,Ag1,3) =L= 210 ; (LHS = 0)
     

---- MaxStor  =L=  

MaxStor(SR1,3)..  S(SR1,3) =L= 500 ; (LHS = 0)
     

---- MinStor  =G=  

MinStor(SR1,3)..  S(SR1,3) =G= 10 ; (LHS = 0, INFES = 10 ****)
     

---- Demand  =E=  

Demand(Urb1)..  - 0.9*Q(J1,Urb1,3) + delivery(Urb1) =E= 0 ;
     
      (LHS = 37.4475046031438, INFES = 37.4475046031438 ****)
     
Demand(Ag1)..  - Q(SR1,Ag1,3) + delivery(Ag1) =E= 0 ;
     
      (LHS = 209.999999999999, INFES = 209.999999999999 ****)
     

---- Objective  =E=  

Objective..  - 7*Q(J1,Urb1,3) - 10*Q(J1,EndPt,3) - 15*Q(SR1,J1,3)
     
      - 20*Q(SR1,Ag1,3) + Z =E= 0 ; (LHS = 4320, INFES = 4320 ****)
     
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 15
Demo2.gms
Column Listing      SOLVE Demo2 Using LP From line 262


---- Q  flow in each link in each period

Q(J1,Urb1,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        0.9     MassBalance_nonstorage(Urb1)
        1       MinFlow(J1,Urb1,3)
        1       MaxFlow(J1,Urb1,3)
       -0.9     Demand(Urb1)
       -7       Objective
       -3       (DJ ****)

Q(J1,EndPt,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        1       MinFlow(J1,EndPt,3)
        1       MaxFlow(J1,EndPt,3)
      -10       Objective

Q(SR1,J1,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(J1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,J1,3)
        1       MaxFlow(SR1,J1,3)
      -15       Objective

Q(SR1,Ag1,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(Ag1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,Ag1,3)
        1       MaxFlow(SR1,Ag1,3)
       -1       Demand(Ag1)
      -20       Objective
       -4       (DJ ****)


---- S  storage volume in storage nodes

S(SR1,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_storage(SR1)
        1       MaxStor(SR1,3)
        1       MinStor(SR1,3)
      -24       (DJ ****)


---- delivery  water delivered to demand node i in each period

delivery(Urb1)
                (.LO, .L, .UP, .M = -INF, 37.4475046031438, +INF, EPS)
       -1       MassBalance_nonstorage(Urb1)
        1       Demand(Urb1)

delivery(Ag1)
                (.LO, .L, .UP, .M = -INF, 209.999999999999, +INF, EPS)
       -1       MassBalance_nonstorage(Ag1)
        1       Demand(Ag1)


---- Z  objective function

Z
                (.LO, .L, .UP, .M = -INF, 4320, +INF, 0)
        1       Objective


---- storage  an interim variable for saving the value of the storage at the end
              of each time-step

storage(SR1,2)
                (.LO, .L, .UP, .M = 500, 500, 500, 0)
        1       MassBalance_storage(SR1)

GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 16
Demo2.gms
Model Statistics    SOLVE Demo2 Using LP From line 262


LOOPS                               tsteps   3


MODEL STATISTICS

BLOCKS OF EQUATIONS           8     SINGLE EQUATIONS           17
BLOCKS OF VARIABLES           5     SINGLE VARIABLES            9
NON ZERO ELEMENTS            30


GENERATION TIME      =        0.015 SECONDS      3 Mb  WEX227-227 May  8, 2008


EXECUTION TIME       =        0.015 SECONDS      3 Mb  WEX227-227 May  8, 2008
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 17
Demo2.gms
Solution Report     SOLVE Demo2 Using LP From line 262


               L O O P S             tsteps 3

               S O L V E      S U M M A R Y

     MODEL   Demo2               OBJECTIVE  Z
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  COINIPOPT           FROM LINE  262

**** SOLVER STATUS     1 NORMAL COMPLETION         
**** MODEL STATUS      1 OPTIMAL                   
**** OBJECTIVE VALUE             6710.0000

 RESOURCE USAGE, LIMIT          0.024      1000.000
 ITERATION COUNT, LIMIT        17         10000

GAMS/CoinIpopt NLP Solver (IPOPT Library 3.4dev, using MUMPS Library 4.7.3)
written by A. Waechter

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Common Public License (CPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

NOTE: You are using Ipopt by default with the MUMPS linear solver.
      Other linear solvers might be more efficient (see Ipopt documentation).


Total number of variables............................:        7
                     variables with only lower bounds:        5
                variables with lower and upper bounds:        0
                     variables with only upper bounds:        0
Total number of equality constraints.................:        6
Total number of inequality constraints...............:       10
        inequality constraints with only lower bounds:        5
   inequality constraints with lower and upper bounds:        0
        inequality constraints with only upper bounds:        5


Number of Iterations....: 17

                                   (scaled)                 (unscaled)
Objective...............:  6.7100000000000209e+003   6.7100000000000209e+003
Dual infeasibility......:  2.2364309888726095e-015   2.2364309888726095e-015
Constraint violation....:  5.6843418860808015e-014   5.6843418860808015e-014
Complementarity.........:  1.0004441719502054e-011   1.0004441719502054e-011
Overall NLP error.......:  1.0004441719502054e-011   1.0004441719502054e-011


Number of objective function evaluations             = 18
Number of objective gradient evaluations             = 18
Number of equality constraint evaluations            = 18
Number of inequality constraint evaluations          = 18
Number of equality constraint Jacobian evaluations   = 18
Number of inequality constraint Jacobian evaluations = 18
Number of Lagrangian Hessian evaluations             = 17
Total CPU secs in IPOPT (w/o function evaluations)   =      0.053
Total CPU secs in NLP function evaluations           =      0.001

EXIT: Optimal Solution Found.

---- EQU MassBalance_nonstorage  

        LOWER     LEVEL     UPPER    MARGINAL

J1        .         .         .       -7.000      
Urb1      .         .         .         EPS       
Ag1       .         .         .    4.7420E-7      

---- EQU MassBalance_storage  

       LOWER     LEVEL     UPPER    MARGINAL

SR1  -320.000  -320.000  -320.000   -22.000      

---- EQU MinFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .3    25.000    80.000     +INF  1.817E-13      
J1 .EndPt.3    30.000    30.000     +INF      3.000      
SR1.J1   .3    10.000   110.000     +INF  0.999E-13      
SR1.Ag1  .3    10.000   210.000     +INF  4.990E-14      

---- EQU MaxFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .3     -INF     80.000   240.000 -6.24E-14      
J1 .EndPt.3     -INF     30.000   200.000 -5.87E-14      
SR1.J1   .3     -INF    110.000   300.000 -5.25E-14      
SR1.Ag1  .3     -INF    210.000   210.000    -2.000      

---- EQU MaxStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.3     -INF    500.000   500.000   -22.000      

---- EQU MinStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.3    10.000   500.000     +INF  2.031E-14      

---- EQU Demand  

        LOWER     LEVEL     UPPER    MARGINAL

Urb1      .         .         .         EPS       
Ag1       .         .         .    4.7420E-7      

                       LOWER     LEVEL     UPPER    MARGINAL

---- EQU Objective       .         .         .        1.000      

---- VAR Q  flow in each link in each period

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .3      .       80.000     +INF  1.250E-13      
J1 .EndPt.3      .       30.000     +INF  3.333E-13      
SR1.J1   .3      .      110.000     +INF  9.091E-14      
SR1.Ag1  .3      .      210.000     +INF  4.762E-14      

---- VAR S  storage volume in storage nodes

         LOWER     LEVEL     UPPER    MARGINAL

SR1.3      .      500.000     +INF  2.000E-14      

---- VAR delivery  water delivered to demand node i in each period

        LOWER     LEVEL     UPPER    MARGINAL

Urb1     -INF     72.000     +INF       EPS       
Ag1      -INF    210.000     +INF       EPS       

                       LOWER     LEVEL     UPPER    MARGINAL

---- VAR Z              -INF   6710.000     +INF       .         

  Z  objective function

---- VAR storage  an interim variable for saving the value of the storage at the
                  end of each time-step

         LOWER     LEVEL     UPPER    MARGINAL

SR1.2   500.000   500.000   500.000      EPS       


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 18
Demo2.gms
E x e c u t i o n


----    265 VARIABLE Z.L                   =     6710.000  objective function

----    265 VARIABLE Obj.L  

1 4190.000,    2 4320.000,    3 6710.000


----    265 VARIABLE storage.L  an interim variable for saving the value of the 
                                storage at the end of each time-step

                1           2           3

SR1       500.000     500.000     500.000


----    265 VARIABLE S.L  storage volume in storage nodes

              1           2           3

SR1     500.000     500.000     500.000


----    265 VARIABLE Q.L  flow in each link in each period

                    1           2           3

J1 .Urb1      215.000      44.056      80.000
J1 .EndPt      10.000      54.944      30.000
SR1.J1        225.000     110.000     110.000
SR1.Ag1        25.000     210.000     210.000


----    265 VARIABLE delivery.L  water delivered to demand node i in each period

Urb1  72.000,    Ag1  210.000


----    261 SET dv  

4

GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 19
Demo2.gms
Equation Listing    SOLVE Demo2 Using LP From line 262


---- MassBalance_nonstorage  =E=  

MassBalance_nonstorage(J1)..  - Q(J1,Urb1,4) - Q(J1,EndPt,4) + 0.95*Q(SR1,J1,4)
      =E= 0 ; (LHS = 0)
     
MassBalance_nonstorage(Urb1)..  0.85*Q(J1,Urb1,4) - delivery(Urb1) =E= 0 ;
     
      (LHS = -72.0000000000015, INFES = 72.0000000000015 ****)
     
MassBalance_nonstorage(Ag1)..  Q(SR1,Ag1,4) - delivery(Ag1) =E= 0 ;
     
      (LHS = -209.999999999995, INFES = 209.999999999995 ****)
     

---- MassBalance_storage  =E=  

MassBalance_storage(SR1)..  - Q(SR1,J1,4) - Q(SR1,Ag1,4) - S(SR1,4)
     
      + storage(SR1,3) =E= -330 ; (LHS = 500, INFES = 830 ****)
     

---- MinFlow  =G=  

MinFlow(J1,Urb1,4)..  Q(J1,Urb1,4) =G= 20 ; (LHS = 0, INFES = 20 ****)
     
MinFlow(J1,EndPt,4)..  Q(J1,EndPt,4) =G= 30 ; (LHS = 0, INFES = 30 ****)
     
MinFlow(SR1,J1,4)..  Q(SR1,J1,4) =G= 10 ; (LHS = 0, INFES = 10 ****)
     
MinFlow(SR1,Ag1,4)..  Q(SR1,Ag1,4) =G= 10 ; (LHS = 0, INFES = 10 ****)
     

---- MaxFlow  =L=  

MaxFlow(J1,Urb1,4)..  Q(J1,Urb1,4) =L= 230 ; (LHS = 0)
     
MaxFlow(J1,EndPt,4)..  Q(J1,EndPt,4) =L= 200 ; (LHS = 0)
     
MaxFlow(SR1,J1,4)..  Q(SR1,J1,4) =L= 300 ; (LHS = 0)
     
MaxFlow(SR1,Ag1,4)..  Q(SR1,Ag1,4) =L= 200 ; (LHS = 0)
     

---- MaxStor  =L=  

MaxStor(SR1,4)..  S(SR1,4) =L= 500 ; (LHS = 0)
     

---- MinStor  =G=  

MinStor(SR1,4)..  S(SR1,4) =G= 10 ; (LHS = 0, INFES = 10 ****)
     

---- Demand  =E=  

Demand(Urb1)..  - 0.85*Q(J1,Urb1,4) + delivery(Urb1) =E= 0 ;
     
      (LHS = 72.0000000000015, INFES = 72.0000000000015 ****)
     
Demand(Ag1)..  - Q(SR1,Ag1,4) + delivery(Ag1) =E= 0 ;
     
      (LHS = 209.999999999995, INFES = 209.999999999995 ****)
     

---- Objective  =E=  

Objective..  - 2*Q(J1,Urb1,4) - 10*Q(J1,EndPt,4) - 15*Q(SR1,J1,4)
     
      - 15*Q(SR1,Ag1,4) + Z =E= 0 ;
     
      (LHS = 6710.00000000002, INFES = 6710.00000000002 ****)
     
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 20
Demo2.gms
Column Listing      SOLVE Demo2 Using LP From line 262


---- Q  flow in each link in each period

Q(J1,Urb1,4)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        0.85    MassBalance_nonstorage(Urb1)
        1       MinFlow(J1,Urb1,4)
        1       MaxFlow(J1,Urb1,4)
       -0.85    Demand(Urb1)
       -2       Objective
       -5       (DJ ****)

Q(J1,EndPt,4)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        1       MinFlow(J1,EndPt,4)
        1       MaxFlow(J1,EndPt,4)
      -10       Objective

Q(SR1,J1,4)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        0.95    MassBalance_nonstorage(J1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,J1,4)
        1       MaxFlow(SR1,J1,4)
      -15       Objective
       -0.35    (DJ ****)

Q(SR1,Ag1,4)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(Ag1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,Ag1,4)
        1       MaxFlow(SR1,Ag1,4)
       -1       Demand(Ag1)
      -15       Objective
       -7       (DJ ****)


---- S  storage volume in storage nodes

S(SR1,4)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_storage(SR1)
        1       MaxStor(SR1,4)
        1       MinStor(SR1,4)
      -22       (DJ ****)


---- delivery  water delivered to demand node i in each period

delivery(Urb1)
                (.LO, .L, .UP, .M = -INF, 72.0000000000015, +INF, EPS)
       -1       MassBalance_nonstorage(Urb1)
        1       Demand(Urb1)

delivery(Ag1)
                (.LO, .L, .UP, .M = -INF, 209.999999999995, +INF, EPS)
       -1       MassBalance_nonstorage(Ag1)
        1       Demand(Ag1)


---- Z  objective function

Z
                (.LO, .L, .UP, .M = -INF, 6710.00000000002, +INF, 0)
        1       Objective


---- storage  an interim variable for saving the value of the storage at the end
              of each time-step

storage(SR1,3)
                (.LO, .L, .UP, .M = 500, 500, 500, 0)
        1       MassBalance_storage(SR1)

GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 21
Demo2.gms
Model Statistics    SOLVE Demo2 Using LP From line 262


LOOPS                               tsteps   4


MODEL STATISTICS

BLOCKS OF EQUATIONS           8     SINGLE EQUATIONS           17
BLOCKS OF VARIABLES           5     SINGLE VARIABLES            9
NON ZERO ELEMENTS            30


GENERATION TIME      =        0.016 SECONDS      3 Mb  WEX227-227 May  8, 2008


EXECUTION TIME       =        0.016 SECONDS      3 Mb  WEX227-227 May  8, 2008
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 22
Demo2.gms
Solution Report     SOLVE Demo2 Using LP From line 262


               L O O P S             tsteps 4

               S O L V E      S U M M A R Y

     MODEL   Demo2               OBJECTIVE  Z
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  COINIPOPT           FROM LINE  262

**** SOLVER STATUS     1 NORMAL COMPLETION         
**** MODEL STATUS      1 OPTIMAL                   
**** OBJECTIVE VALUE             5437.0000

 RESOURCE USAGE, LIMIT          0.036      1000.000
 ITERATION COUNT, LIMIT        16         10000

GAMS/CoinIpopt NLP Solver (IPOPT Library 3.4dev, using MUMPS Library 4.7.3)
written by A. Waechter

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Common Public License (CPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

NOTE: You are using Ipopt by default with the MUMPS linear solver.
      Other linear solvers might be more efficient (see Ipopt documentation).


Total number of variables............................:        7
                     variables with only lower bounds:        5
                variables with lower and upper bounds:        0
                     variables with only upper bounds:        0
Total number of equality constraints.................:        6
Total number of inequality constraints...............:       10
        inequality constraints with only lower bounds:        5
   inequality constraints with lower and upper bounds:        0
        inequality constraints with only upper bounds:        5


Number of Iterations....: 16

                                   (scaled)                 (unscaled)
Objective...............:  5.4370000000031141e+003   5.4370000000031141e+003
Dual infeasibility......:  2.5449303787868985e-010   2.5449303787868985e-010
Constraint violation....:  1.4210854715202004e-014   1.4210854715202004e-014
Complementarity.........:  9.2592150576589251e-009   9.2592150576589251e-009
Overall NLP error.......:  9.2592150576589251e-009   9.2592150576589251e-009


Number of objective function evaluations             = 17
Number of objective gradient evaluations             = 17
Number of equality constraint evaluations            = 17
Number of inequality constraint evaluations          = 17
Number of equality constraint Jacobian evaluations   = 17
Number of inequality constraint Jacobian evaluations = 17
Number of Lagrangian Hessian evaluations             = 16
Total CPU secs in IPOPT (w/o function evaluations)   =      0.072
Total CPU secs in NLP function evaluations           =      0.001

EXIT: Optimal Solution Found.

---- EQU MassBalance_nonstorage  

        LOWER     LEVEL     UPPER    MARGINAL

J1        .         .         .       -2.000      
Urb1      .         .         .         EPS       
Ag1       .         .         .    -1.818E-7      

---- EQU MassBalance_storage  

       LOWER     LEVEL     UPPER    MARGINAL

SR1  -330.000  -330.000  -330.000   -16.900      

---- EQU MinFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .4    20.000    93.500     +INF  2.405E-11      
J1 .EndPt.4    30.000    30.000     +INF      8.000      
SR1.J1   .4    10.000   130.000     +INF  6.228E-11      
SR1.Ag1  .4    10.000   200.000     +INF  -1.65E-11      

---- EQU MaxFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .4     -INF     93.500   230.000 -1.74E-11      
J1 .EndPt.4     -INF     30.000   200.000 -1.43E-11      
SR1.J1   .4     -INF    130.000   300.000 -9.22E-12      
SR1.Ag1  .4     -INF    200.000   200.000    -1.900      

---- EQU MaxStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.4     -INF    500.000   500.000   -16.900      

---- EQU MinStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.4    10.000   500.000     +INF  5.853E-12      

---- EQU Demand  

        LOWER     LEVEL     UPPER    MARGINAL

Urb1      .         .         .         EPS       
Ag1       .         .         .    -1.818E-7      

                       LOWER     LEVEL     UPPER    MARGINAL

---- EQU Objective       .         .         .        1.000      

---- VAR Q  flow in each link in each period

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .4      .       93.500     +INF  1.455E-11      
J1 .EndPt.4      .       30.000     +INF  3.086E-10      
SR1.J1   .4      .      130.000     +INF  2.563E-11      
SR1.Ag1  .4      .      200.000     +INF  8.348E-12      

---- VAR S  storage volume in storage nodes

         LOWER     LEVEL     UPPER    MARGINAL

SR1.4      .      500.000     +INF  3.645E-12      

---- VAR delivery  water delivered to demand node i in each period

        LOWER     LEVEL     UPPER    MARGINAL

Urb1     -INF     79.475     +INF       EPS       
Ag1      -INF    200.000     +INF       EPS       

                       LOWER     LEVEL     UPPER    MARGINAL

---- VAR Z              -INF   5437.000     +INF       .         

  Z  objective function

---- VAR storage  an interim variable for saving the value of the storage at the
                  end of each time-step

         LOWER     LEVEL     UPPER    MARGINAL

SR1.3   500.000   500.000   500.000      EPS       


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 23
Demo2.gms
E x e c u t i o n


----    265 VARIABLE Z.L                   =     5437.000  objective function

----    265 VARIABLE Obj.L  

1 4190.000,    2 4320.000,    3 6710.000,    4 5437.000


----    265 VARIABLE storage.L  an interim variable for saving the value of the 
                                storage at the end of each time-step

                1           2           3           4

SR1       500.000     500.000     500.000     500.000


----    265 VARIABLE S.L  storage volume in storage nodes

              1           2           3           4

SR1     500.000     500.000     500.000     500.000


----    265 VARIABLE Q.L  flow in each link in each period

                    1           2           3           4

J1 .Urb1      215.000      44.056      80.000      93.500
J1 .EndPt      10.000      54.944      30.000      30.000
SR1.J1        225.000     110.000     110.000     130.000
SR1.Ag1        25.000     210.000     210.000     200.000


----    265 VARIABLE delivery.L  water delivered to demand node i in each period

Urb1  79.475,    Ag1  200.000


----    261 SET dv  

5

GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 24
Demo2.gms
Equation Listing    SOLVE Demo2 Using LP From line 262


---- MassBalance_nonstorage  =E=  

MassBalance_nonstorage(J1)..  - Q(J1,Urb1,5) - Q(J1,EndPt,5) + Q(SR1,J1,5) =E= 0
      ; (LHS = 0)
     
MassBalance_nonstorage(Urb1)..  0.9*Q(J1,Urb1,5) - delivery(Urb1) =E= 0 ;
     
      (LHS = -79.4750000001513, INFES = 79.4750000001513 ****)
     
MassBalance_nonstorage(Ag1)..  Q(SR1,Ag1,5) - delivery(Ag1) =E= 0 ;
     
      (LHS = -199.999999999772, INFES = 199.999999999772 ****)
     

---- MassBalance_storage  =E=  

MassBalance_storage(SR1)..  - Q(SR1,J1,5) - Q(SR1,Ag1,5) - S(SR1,5)
     
      + storage(SR1,4) =E= -310 ;
     
      (LHS = 499.999999999903, INFES = 809.999999999903 ****)
     

---- MinFlow  =G=  

MinFlow(J1,Urb1,5)..  Q(J1,Urb1,5) =G= 20 ; (LHS = 0, INFES = 20 ****)
     
MinFlow(J1,EndPt,5)..  Q(J1,EndPt,5) =G= 30 ; (LHS = 0, INFES = 30 ****)
     
MinFlow(SR1,J1,5)..  Q(SR1,J1,5) =G= 10 ; (LHS = 0, INFES = 10 ****)
     
MinFlow(SR1,Ag1,5)..  Q(SR1,Ag1,5) =G= 15 ; (LHS = 0, INFES = 15 ****)
     

---- MaxFlow  =L=  

MaxFlow(J1,Urb1,5)..  Q(J1,Urb1,5) =L= 240 ; (LHS = 0)
     
MaxFlow(J1,EndPt,5)..  Q(J1,EndPt,5) =L= 200 ; (LHS = 0)
     
MaxFlow(SR1,J1,5)..  Q(SR1,J1,5) =L= 310 ; (LHS = 0)
     
MaxFlow(SR1,Ag1,5)..  Q(SR1,Ag1,5) =L= 200 ; (LHS = 0)
     

---- MaxStor  =L=  

MaxStor(SR1,5)..  S(SR1,5) =L= 500 ; (LHS = 0)
     

---- MinStor  =G=  

MinStor(SR1,5)..  S(SR1,5) =G= 10 ; (LHS = 0, INFES = 10 ****)
     

---- Demand  =E=  

Demand(Urb1)..  - 0.9*Q(J1,Urb1,5) + delivery(Urb1) =E= 0 ;
     
      (LHS = 79.4750000001513, INFES = 79.4750000001513 ****)
     
Demand(Ag1)..  - Q(SR1,Ag1,5) + delivery(Ag1) =E= 0 ;
     
      (LHS = 199.999999999772, INFES = 199.999999999772 ****)
     

---- Objective  =E=  

Objective..  - 3*Q(J1,Urb1,5) - 10*Q(J1,EndPt,5) - 15*Q(SR1,J1,5)
     
      - 19*Q(SR1,Ag1,5) + Z =E= 0 ;
     
      (LHS = 5437.00000000311, INFES = 5437.00000000311 ****)
     
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 25
Demo2.gms
Column Listing      SOLVE Demo2 Using LP From line 262


---- Q  flow in each link in each period

Q(J1,Urb1,5)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        0.9     MassBalance_nonstorage(Urb1)
        1       MinFlow(J1,Urb1,5)
        1       MaxFlow(J1,Urb1,5)
       -0.9     Demand(Urb1)
       -3       Objective

Q(J1,EndPt,5)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        1       MinFlow(J1,EndPt,5)
        1       MaxFlow(J1,EndPt,5)
      -10       Objective

Q(SR1,J1,5)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(J1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,J1,5)
        1       MaxFlow(SR1,J1,5)
      -15       Objective

Q(SR1,Ag1,5)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(Ag1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,Ag1,5)
        1       MaxFlow(SR1,Ag1,5)
       -1       Demand(Ag1)
      -19       Objective


---- S  storage volume in storage nodes

S(SR1,5)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_storage(SR1)
        1       MaxStor(SR1,5)
        1       MinStor(SR1,5)
      -16.9     (DJ ****)


---- delivery  water delivered to demand node i in each period

delivery(Urb1)
                (.LO, .L, .UP, .M = -INF, 79.4750000001513, +INF, EPS)
       -1       MassBalance_nonstorage(Urb1)
        1       Demand(Urb1)

delivery(Ag1)
                (.LO, .L, .UP, .M = -INF, 199.999999999772, +INF, EPS)
       -1       MassBalance_nonstorage(Ag1)
        1       Demand(Ag1)


---- Z  objective function

Z
                (.LO, .L, .UP, .M = -INF, 5437.00000000311, +INF, 0)
        1       Objective


---- storage  an interim variable for saving the value of the storage at the end
              of each time-step

storage(SR1,4)
                (.LO, .L, .UP, .M = 499.999999999903, 499.999999999903, 
499.999999999903, 0)
        1       MassBalance_storage(SR1)

GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 26
Demo2.gms
Model Statistics    SOLVE Demo2 Using LP From line 262


LOOPS                               tsteps   5


MODEL STATISTICS

BLOCKS OF EQUATIONS           8     SINGLE EQUATIONS           17
BLOCKS OF VARIABLES           5     SINGLE VARIABLES            9
NON ZERO ELEMENTS            30


GENERATION TIME      =        0.031 SECONDS      3 Mb  WEX227-227 May  8, 2008


EXECUTION TIME       =        0.031 SECONDS      3 Mb  WEX227-227 May  8, 2008
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 27
Demo2.gms
Solution Report     SOLVE Demo2 Using LP From line 262


               L O O P S             tsteps 5

               S O L V E      S U M M A R Y

     MODEL   Demo2               OBJECTIVE  Z
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  COINIPOPT           FROM LINE  262

**** SOLVER STATUS     1 NORMAL COMPLETION         
**** MODEL STATUS      1 OPTIMAL                   
**** OBJECTIVE VALUE             5830.0000

 RESOURCE USAGE, LIMIT          0.040      1000.000
 ITERATION COUNT, LIMIT        15         10000

GAMS/CoinIpopt NLP Solver (IPOPT Library 3.4dev, using MUMPS Library 4.7.3)
written by A. Waechter

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Common Public License (CPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

NOTE: You are using Ipopt by default with the MUMPS linear solver.
      Other linear solvers might be more efficient (see Ipopt documentation).


Total number of variables............................:        7
                     variables with only lower bounds:        5
                variables with lower and upper bounds:        0
                     variables with only upper bounds:        0
Total number of equality constraints.................:        6
Total number of inequality constraints...............:       10
        inequality constraints with only lower bounds:        5
   inequality constraints with lower and upper bounds:        0
        inequality constraints with only upper bounds:        5


Number of Iterations....: 15

                                   (scaled)                 (unscaled)
Objective...............:  5.8300000000024365e+003   5.8300000000024365e+003
Dual infeasibility......:  2.3030999329876067e-010   2.3030999329876067e-010
Constraint violation....:  5.6843418860808015e-014   5.6843418860808015e-014
Complementarity.........:  2.0531274458243500e-009   2.0531274458243500e-009
Overall NLP error.......:  2.0531274458243500e-009   2.0531274458243500e-009


Number of objective function evaluations             = 16
Number of objective gradient evaluations             = 16
Number of equality constraint evaluations            = 16
Number of inequality constraint evaluations          = 16
Number of equality constraint Jacobian evaluations   = 16
Number of inequality constraint Jacobian evaluations = 16
Number of Lagrangian Hessian evaluations             = 15
Total CPU secs in IPOPT (w/o function evaluations)   =      0.106
Total CPU secs in NLP function evaluations           =      0.000

EXIT: Optimal Solution Found.

---- EQU MassBalance_nonstorage  

        LOWER     LEVEL     UPPER    MARGINAL

J1        .         .         .       -4.000      
Urb1      .         .         .         EPS       
Ag1       .         .         .    -3.261E-8      

---- EQU MassBalance_storage  

       LOWER     LEVEL     UPPER    MARGINAL

SR1  -310.000  -310.000  -310.000   -19.000      

---- EQU MinFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .5    20.000   240.000     +INF  7.161E-12      
J1 .EndPt.5    30.000    30.000     +INF      6.000      
SR1.J1   .5    10.000   270.000     +INF  5.338E-12      
SR1.Ag1  .5    15.000    40.000     +INF  1.734E-10      

---- EQU MaxFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .5     -INF    240.000   240.000    -1.000      
J1 .EndPt.5     -INF     30.000   200.000 -1.29E-11      
SR1.J1   .5     -INF    270.000   310.000 -9.56E-11      
SR1.Ag1  .5     -INF     40.000   200.000 -4.65E-12      

---- EQU MaxStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.5     -INF    500.000   500.000   -19.000      

---- EQU MinStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.5    10.000   500.000     +INF  4.495E-12      

---- EQU Demand  

        LOWER     LEVEL     UPPER    MARGINAL

Urb1      .         .         .         EPS       
Ag1       .         .         .    -3.261E-8      

                       LOWER     LEVEL     UPPER    MARGINAL

---- EQU Objective       .         .         .        1.000      

---- VAR Q  flow in each link in each period

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .5      .      240.000     +INF  2.720E-12      
J1 .EndPt.5      .       30.000     +INF  2.837E-11      
SR1.J1   .5      .      270.000     +INF  2.434E-12      
SR1.Ag1  .5      .       40.000     +INF  3.186E-11      

---- VAR S  storage volume in storage nodes

         LOWER     LEVEL     UPPER    MARGINAL

SR1.5      .      500.000     +INF  1.455E-12      

---- VAR delivery  water delivered to demand node i in each period

        LOWER     LEVEL     UPPER    MARGINAL

Urb1     -INF    216.000     +INF       EPS       
Ag1      -INF     40.000     +INF       EPS       

                       LOWER     LEVEL     UPPER    MARGINAL

---- VAR Z              -INF   5830.000     +INF       .         

  Z  objective function

---- VAR storage  an interim variable for saving the value of the storage at the
                  end of each time-step

         LOWER     LEVEL     UPPER    MARGINAL

SR1.4   500.000   500.000   500.000      EPS       


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 28
Demo2.gms
E x e c u t i o n


----    265 VARIABLE Z.L                   =     5830.000  objective function

----    265 VARIABLE Obj.L  

1 4190.000,    2 4320.000,    3 6710.000,    4 5437.000,    5 5830.000


----    265 VARIABLE storage.L  an interim variable for saving the value of the 
                                storage at the end of each time-step

                1           2           3           4           5

SR1       500.000     500.000     500.000     500.000     500.000


----    265 VARIABLE S.L  storage volume in storage nodes

              1           2           3           4           5

SR1     500.000     500.000     500.000     500.000     500.000


----    265 VARIABLE Q.L  flow in each link in each period

                    1           2           3           4           5

J1 .Urb1      215.000      44.056      80.000      93.500     240.000
J1 .EndPt      10.000      54.944      30.000      30.000      30.000
SR1.J1        225.000     110.000     110.000     130.000     270.000
SR1.Ag1        25.000     210.000     210.000     200.000      40.000


----    265 VARIABLE delivery.L  water delivered to demand node i in each period

Urb1 216.000,    Ag1   40.000


----    261 SET dv  

6

GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 29
Demo2.gms
Equation Listing    SOLVE Demo2 Using LP From line 262


---- MassBalance_nonstorage  =E=  

MassBalance_nonstorage(J1)..  - Q(J1,Urb1,6) - Q(J1,EndPt,6) + Q(SR1,J1,6) =E= 0
      ; (LHS = 0)
     
MassBalance_nonstorage(Urb1)..  Q(J1,Urb1,6) - delivery(Urb1) =E= 0 ;
     
      (LHS = -215.999999999825, INFES = 215.999999999825 ****)
     
MassBalance_nonstorage(Ag1)..  Q(SR1,Ag1,6) - delivery(Ag1) =E= 0 ;
     
      (LHS = -39.9999999998656, INFES = 39.9999999998656 ****)
     

---- MassBalance_storage  =E=  

MassBalance_storage(SR1)..  - Q(SR1,J1,6) - Q(SR1,Ag1,6) - S(SR1,6)
     
      + storage(SR1,5) =E= -310 ;
     
      (LHS = 499.999999999892, INFES = 809.999999999892 ****)
     

---- MinFlow  =G=  

MinFlow(J1,Urb1,6)..  Q(J1,Urb1,6) =G= 20 ; (LHS = 0, INFES = 20 ****)
     
MinFlow(J1,EndPt,6)..  Q(J1,EndPt,6) =G= 30 ; (LHS = 0, INFES = 30 ****)
     
MinFlow(SR1,J1,6)..  Q(SR1,J1,6) =G= 10 ; (LHS = 0, INFES = 10 ****)
     
MinFlow(SR1,Ag1,6)..  Q(SR1,Ag1,6) =G= 15 ; (LHS = 0, INFES = 15 ****)
     

---- MaxFlow  =L=  

MaxFlow(J1,Urb1,6)..  Q(J1,Urb1,6) =L= 250 ; (LHS = 0)
     
MaxFlow(J1,EndPt,6)..  Q(J1,EndPt,6) =L= 200 ; (LHS = 0)
     
MaxFlow(SR1,J1,6)..  Q(SR1,J1,6) =L= 300 ; (LHS = 0)
     
MaxFlow(SR1,Ag1,6)..  Q(SR1,Ag1,6) =L= 200 ; (LHS = 0)
     

---- MaxStor  =L=  

MaxStor(SR1,6)..  S(SR1,6) =L= 500 ; (LHS = 0)
     

---- MinStor  =G=  

MinStor(SR1,6)..  S(SR1,6) =G= 10 ; (LHS = 0, INFES = 10 ****)
     

---- Demand  =E=  

Demand(Urb1)..  - Q(J1,Urb1,6) + delivery(Urb1) =E= 0 ;
     
      (LHS = 215.999999999825, INFES = 215.999999999825 ****)
     
Demand(Ag1)..  - Q(SR1,Ag1,6) + delivery(Ag1) =E= 0 ;
     
      (LHS = 39.9999999998656, INFES = 39.9999999998656 ****)
     

---- Objective  =E=  

Objective..  - 5*Q(J1,Urb1,6) - 10*Q(J1,EndPt,6) - 15*Q(SR1,J1,6)
     
      - 10*Q(SR1,Ag1,6) + Z =E= 0 ;
     
      (LHS = 5830.00000000244, INFES = 5830.00000000244 ****)
     
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 30
Demo2.gms
Column Listing      SOLVE Demo2 Using LP From line 262


---- Q  flow in each link in each period

Q(J1,Urb1,6)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        1       MassBalance_nonstorage(Urb1)
        1       MinFlow(J1,Urb1,6)
        1       MaxFlow(J1,Urb1,6)
       -1       Demand(Urb1)
       -5       Objective

Q(J1,EndPt,6)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_nonstorage(J1)
        1       MinFlow(J1,EndPt,6)
        1       MaxFlow(J1,EndPt,6)
      -10       Objective

Q(SR1,J1,6)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(J1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,J1,6)
        1       MaxFlow(SR1,J1,6)
      -15       Objective
  -8.48122E-11  (DJ ****)

Q(SR1,Ag1,6)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       MassBalance_nonstorage(Ag1)
       -1       MassBalance_storage(SR1)
        1       MinFlow(SR1,Ag1,6)
        1       MaxFlow(SR1,Ag1,6)
       -1       Demand(Ag1)
      -10       Objective
       -9       (DJ ****)


---- S  storage volume in storage nodes

S(SR1,6)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       MassBalance_storage(SR1)
        1       MaxStor(SR1,6)
        1       MinStor(SR1,6)
      -19       (DJ ****)


---- delivery  water delivered to demand node i in each period

delivery(Urb1)
                (.LO, .L, .UP, .M = -INF, 215.999999999825, +INF, EPS)
       -1       MassBalance_nonstorage(Urb1)
        1       Demand(Urb1)

delivery(Ag1)
                (.LO, .L, .UP, .M = -INF, 39.9999999998656, +INF, EPS)
       -1       MassBalance_nonstorage(Ag1)
        1       Demand(Ag1)


---- Z  objective function

Z
                (.LO, .L, .UP, .M = -INF, 5830.00000000244, +INF, 0)
        1       Objective


---- storage  an interim variable for saving the value of the storage at the end
              of each time-step

storage(SR1,5)
                (.LO, .L, .UP, .M = 499.999999999892, 499.999999999892, 
499.999999999892, 0)
        1       MassBalance_storage(SR1)

GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 31
Demo2.gms
Model Statistics    SOLVE Demo2 Using LP From line 262


LOOPS                               tsteps   6


MODEL STATISTICS

BLOCKS OF EQUATIONS           8     SINGLE EQUATIONS           17
BLOCKS OF VARIABLES           5     SINGLE VARIABLES            9
NON ZERO ELEMENTS            30


GENERATION TIME      =        0.016 SECONDS      3 Mb  WEX227-227 May  8, 2008


EXECUTION TIME       =        0.016 SECONDS      3 Mb  WEX227-227 May  8, 2008
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 32
Demo2.gms
Solution Report     SOLVE Demo2 Using LP From line 262


               L O O P S             tsteps 6

               S O L V E      S U M M A R Y

     MODEL   Demo2               OBJECTIVE  Z
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  COINIPOPT           FROM LINE  262

**** SOLVER STATUS     1 NORMAL COMPLETION         
**** MODEL STATUS      1 OPTIMAL                   
**** OBJECTIVE VALUE             4350.0000

 RESOURCE USAGE, LIMIT          0.018      1000.000
 ITERATION COUNT, LIMIT        16         10000

GAMS/CoinIpopt NLP Solver (IPOPT Library 3.4dev, using MUMPS Library 4.7.3)
written by A. Waechter

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Common Public License (CPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

NOTE: You are using Ipopt by default with the MUMPS linear solver.
      Other linear solvers might be more efficient (see Ipopt documentation).


Total number of variables............................:        7
                     variables with only lower bounds:        5
                variables with lower and upper bounds:        0
                     variables with only upper bounds:        0
Total number of equality constraints.................:        6
Total number of inequality constraints...............:       10
        inequality constraints with only lower bounds:        5
   inequality constraints with lower and upper bounds:        0
        inequality constraints with only upper bounds:        5


Number of Iterations....: 16

                                   (scaled)                 (unscaled)
Objective...............:  4.3499999999978681e+003   4.3499999999978681e+003
Dual infeasibility......:  1.5145006274732757e-015   1.5145006274732757e-015
Constraint violation....:  5.6843418860808015e-014   5.6843418860808015e-014
Complementarity.........:  1.0231815394945273e-011   1.0231815394945273e-011
Overall NLP error.......:  1.0231815394945273e-011   1.0231815394945273e-011


Number of objective function evaluations             = 17
Number of objective gradient evaluations             = 17
Number of equality constraint evaluations            = 17
Number of inequality constraint evaluations          = 17
Number of equality constraint Jacobian evaluations   = 17
Number of inequality constraint Jacobian evaluations = 17
Number of Lagrangian Hessian evaluations             = 16
Total CPU secs in IPOPT (w/o function evaluations)   =      0.049
Total CPU secs in NLP function evaluations           =      0.000

EXIT: Optimal Solution Found.

---- EQU MassBalance_nonstorage  

        LOWER     LEVEL     UPPER    MARGINAL

J1        .         .         .       -5.000      
Urb1      .         .         .         EPS       
Ag1       .         .         .    -1.225E-8      

---- EQU MassBalance_storage  

       LOWER     LEVEL     UPPER    MARGINAL

SR1  -310.000  -310.000  -310.000   -20.000      

---- EQU MinFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .6    20.000    80.000     +INF  1.666E-13      
J1 .EndPt.6    30.000    30.000     +INF      5.000      
SR1.J1   .6    10.000   110.000     +INF  0.999E-13      
SR1.Ag1  .6    15.000   200.000     +INF  5.395E-14      

---- EQU MaxFlow  

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .6     -INF     80.000   250.000 -5.87E-14      
J1 .EndPt.6     -INF     30.000   200.000 -5.87E-14      
SR1.J1   .6     -INF    110.000   300.000 -5.25E-14      
SR1.Ag1  .6     -INF    200.000   200.000   -10.000      

---- EQU MaxStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.6     -INF    500.000   500.000   -20.000      

---- EQU MinStor  

         LOWER     LEVEL     UPPER    MARGINAL

SR1.6    10.000   500.000     +INF  2.031E-14      

---- EQU Demand  

        LOWER     LEVEL     UPPER    MARGINAL

Urb1      .         .         .         EPS       
Ag1       .         .         .    -1.225E-8      

                       LOWER     LEVEL     UPPER    MARGINAL

---- EQU Objective       .         .         .        1.000      

---- VAR Q  flow in each link in each period

               LOWER     LEVEL     UPPER    MARGINAL

J1 .Urb1 .6      .       80.000     +INF  1.250E-13      
J1 .EndPt.6      .       30.000     +INF  3.333E-13      
SR1.J1   .6      .      110.000     +INF  9.091E-14      
SR1.Ag1  .6      .      200.000     +INF  5.000E-14      

---- VAR S  storage volume in storage nodes

         LOWER     LEVEL     UPPER    MARGINAL

SR1.6      .      500.000     +INF  2.000E-14      

---- VAR delivery  water delivered to demand node i in each period

        LOWER     LEVEL     UPPER    MARGINAL

Urb1     -INF     80.000     +INF       EPS       
Ag1      -INF    200.000     +INF       EPS       

                       LOWER     LEVEL     UPPER    MARGINAL

---- VAR Z              -INF   4350.000     +INF       .         

  Z  objective function

---- VAR storage  an interim variable for saving the value of the storage at the
                  end of each time-step

         LOWER     LEVEL     UPPER    MARGINAL

SR1.5   500.000   500.000   500.000      EPS       


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS Rev 227  x86_64/MS Windows                        11/06/14 12:52:00 Page 33
Demo2.gms
E x e c u t i o n


----    265 VARIABLE Z.L                   =     4350.000  objective function

----    265 VARIABLE Obj.L  

1 4190.000,    2 4320.000,    3 6710.000,    4 5437.000,    5 5830.000
6 4350.000


----    265 VARIABLE storage.L  an interim variable for saving the value of the 
                                storage at the end of each time-step

                1           2           3           4           5           6

SR1       500.000     500.000     500.000     500.000     500.000     500.000


----    265 VARIABLE S.L  storage volume in storage nodes

              1           2           3           4           5           6

SR1     500.000     500.000     500.000     500.000     500.000     500.000


----    265 VARIABLE Q.L  flow in each link in each period

                    1           2           3           4           5

J1 .Urb1      215.000      44.056      80.000      93.500     240.000
J1 .EndPt      10.000      54.944      30.000      30.000      30.000
SR1.J1        225.000     110.000     110.000     130.000     270.000
SR1.Ag1        25.000     210.000     210.000     200.000      40.000

        +           6

J1 .Urb1       80.000
J1 .EndPt      30.000
SR1.J1        110.000
SR1.Ag1       200.000


----    265 VARIABLE delivery.L  water delivered to demand node i in each period

Urb1  80.000,    Ag1  200.000



EXECUTION TIME       =        0.000 SECONDS      3 Mb  WEX227-227 May  8, 2008


USER: GAMS Development Corporation, Washington, DC   G871201/0000CA-ANY
      Free Demo,  202-342-0180,  sales@gams.com,  www.gams.com   DC0000


**** FILE SUMMARY

Input      C:\My Manchester\Watersys\Demo2\Demo2.gms
Output     C:\My Manchester\Watersys\Demo2\Demo2.lst
