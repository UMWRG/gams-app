* Network topology defenition

SETS
i vector of all nodes /
J1
Urb1
Ag1
EndPt
J2
/

Alias(i,j)

* Node types

SETS

jn(i) /
J1
J2
EndPt
/


ag(i) /
Ag1
/

ur(i) /
Urb1
/

* Node groups

SETS
ns_nodes(i) non-storage nodes where mass balance constraint should be satisfied /
J1
J2
Urb1
Ag1
/

SETS
dem_nodes(i) demand nodes /
Ag1
Urb1
/

SETS
links(i,j) vector of all links /
J1.J2
J1.Ag1
J2.Urb1
J2.EndPt
/

* Connectivity matrix

Table Connect(i,j)
        J2        Urb1        Ag1          EndPt        J1
J2      0         1           0              1          0
Urb1    0         0           0              0          0
Ag1     0         0           0              0          0
EndPt   0         0           0              0          0
J1      1         0           1              0          0


* Nodes data


* Consumption coefficient

Parameter cc(i);
   cc("Ag1")=1;
   cc("Urb1")=1;

parameter cost(i,j) /
J1.J2           15
J1.Ag1          20
J2.Urb1         1
J2.EndPt        10
/;

parameter inflow (i) /
J1              300
/;


parameter flowmultiplier(i,j) /
J1.J2                        1
J1.Ag1                       1
J2.Urb1                      0.95
J2.EndPt                     1
/;

parameter lower(i,j) /
J1.J2                         10
J1.Ag1                        25
J2.Urb1                       20
J2.EndPt                      10
/;

parameter upper(i,j) /
J1.J2                         310
J1.Ag1                        220
J2.Urb1                       220
J2.EndPt                      220
/;